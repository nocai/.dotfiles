# -- general -------------------------------------------------------------------

set -g default-terminal "screen-256color"
if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'

setw -g  xterm-keys   on
set  -s  escape-time  10  # faster command sequences
set  -sg repeat-time  600 # increase repeat timeout
set  -s  focus-events on

set  -g  prefix2     C-a # GNU-Screen compatible prefix
bind C-a send-prefix -2

set  -qg status-utf8 on # expect UTF-8 (tmux < 2.2)
setw -qg utf8        on

set -g history-limit 5000 # boost history

# edit configuration
bind r new-window -n "~/.tmux.conf" "EDITOR=\${EDITOR//mvim/vim} && EDITOR=\${EDITOR//gvim/vim} && \${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\""

# reload configuration
bind R source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# -- display -------------------------------------------------------------------

set  -g base-index         1    # start windows numbering at 1
setw -g pane-base-index    1    # make pane numbering consistent with windows

setw -g automatic-rename   on   # rename window to reflect current program
set  -g renumber-windows   on   # renumber windows when a window is closed

set  -g set-titles         on   # set terminal title

set  -g display-panes-time 800  # slightly longer pane indicators display time
set  -g display-time       1000 # slightly longer status messages display time

set  -g status-interval    10   # redraw status line every 10 seconds

# activity
set  -g monitor-activity   on
set  -g visual-activity    off

# move status line to top
# set -g status-position top

set-option -g status-justify     "centre"

set-option -g status-style       bg=default
set-option -g status-left-length 30

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# -- navigation ----------------------------------------------------------------

set -g mouse on
# togglemouse
bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"

# split current window
bind \\ split-window -h
bind |  split-window -fh
bind -  split-window -v
bind _  split-window -fv

# window navigation
unbind n
unbind p
bind -r C-p previous-window # select previous window
bind -r C-n next-window     # select next window
bind Tab    last-window     # move to last active window

# pane navigation
bind -r h select-pane -L # move left
bind -r n select-pane -D # move down
bind -r e select-pane -U # move up
bind -r i select-pane -R # move right
bind >    swap-pane   -D # swap current pane with the next one
bind <    swap-pane   -U # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r N resize-pane -D 2
bind -r E resize-pane -U 2
bind -r I resize-pane -R 2

# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit I end-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'

# vi-copy: colemak
run -b 'tmux bind -t vi-copy n cursor-down 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi n send -X cursor-down 2> /dev/null || true'
run -b 'tmux bind -t vi-copy e cursor-up 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi e send -X cursor-up 2> /dev/null || true'
run -b 'tmux bind -t vi-copy i cursor-right 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi i send -X cursor-right 2> /dev/null || true'
run -b 'tmux bind -t vi-copy j next-word-end 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi j send -X next-word-end 2> /dev/null || true'
run -b 'tmux bind -t vi-copy k search-again 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi k send -X search-again 2> /dev/null || true'
run -b 'tmux bind -t vi-copy K search-reverse 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi K send -X search-reverse 2> /dev/null || true'

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


