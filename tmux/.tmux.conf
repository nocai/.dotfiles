# -- general -------------------------------------------------------------------

# C-b is not acceptable -- Vim uses it
# Change the prefix key to C-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

# Change the default $TERM to tmux-256color
set -g default-terminal "screen-256color"
if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'

setw -g  xterm-keys   on
set  -s  escape-time  10  # faster command sequences
set  -sg repeat-time  600 # increase repeat timeout
set  -s  focus-events on

set  -qg status-utf8 on # expect UTF-8 (tmux < 2.2)
setw -qg utf8        on

set -g history-limit 5000 # boost history

# edit configuration
bind r new-window -n "~/.tmux.conf" "EDITOR=\${EDITOR//mvim/vim} && EDITOR=\${EDITOR//gvim/vim} && \${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\""

# reload configuration
bind R source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# -- display -------------------------------------------------------------------

set  -g base-index         1    # start windows numbering at 1
setw -g pane-base-index    1    # make pane numbering consistent with windows

setw -g automatic-rename   on   # rename window to reflect current program
set  -g renumber-windows   on   # renumber windows when a window is closed

set  -g set-titles         on   # set terminal title

set  -g display-panes-time 800  # slightly longer pane indicators display time
set  -g display-time       1000 # slightly longer status messages display time

set  -g status-interval    10   # redraw status line every 10 seconds

# activity
set  -g monitor-activity   on
set  -g visual-activity    off

# move status line to top
# set -g status-position top

set-option -g status-justify     "centre"

set-option -g status-style       bg=default
# set-option -g status-left-length 30

# -- navigation ----------------------------------------------------------------
set -g mouse on

# split current window
bind \\ split-window -h
bind |  split-window -fh
bind -  split-window -v
bind _  split-window -fv

# window navigation
unbind p
bind -r Tab next-window
bind -r BTab previous-window # select previous window

# pane navigation
bind -r h select-pane -L # move left
bind -r n select-pane -D # move down
bind -r e select-pane -U # move up
bind -r i select-pane -R # move right

# remap for copy-mode-vi
set-window-option -g mode-keys vi

bind-key   -T copy-mode-vi v   send-keys -X begin-selection

bind-key   -T copy-mode-vi n   send-keys -X cursor-down
bind-key   -T copy-mode-vi e   send-keys -X cursor-up
unbind-key -T copy-mode-vi l
bind-key   -T copy-mode-vi i   send-keys -X cursor-right

bind-key   -T copy-mode-vi j   send-keys -X next-word-end

unbind-key -T copy-mode-vi L
bind-key   -T copy-mode-vi I   send-keys -X bottom-line

unbind-key -T copy-mode-vi C-e
bind-key   -T copy-mode-vi C-j send-keys -X scroll-down
bind-key   -T copy-mode-vi C-n send-keys -X copy-pipe-and-cancel

bind-key   -T copy-mode-vi k   send-keys -X search-again
bind-key   -T copy-mode-vi K   send-keys -X search-reverse

# can't remap for choose-tree
bind-key -T root  h if -F "#{==:#{pane_mode},tree-mode}" "send h" "send h"
bind-key -T root  n if -F "#{==:#{pane_mode},tree-mode}" "send j" "send n"
bind-key -T root  e if -F "#{==:#{pane_mode},tree-mode}" "send k" "send e"
bind-key -T root  i if -F "#{==:#{pane_mode},tree-mode}" "send l" "send i;"
